# -*- coding: utf-8 -*-
"""Step 1/5 - Sorting coordinates of DSS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JyKM9kW8MGntVSQRhqPGHNa9K2zZAXds

**File used**


*   DSS_Coordinates
*   sorted_coordinates_1
*   sorted_coordinates_2
*   sorted_coordinates_3


**semua file di: Tugas Akhir -> Data -> Raw Data -> DSS_Coordinates**

*------------------------------------------------------------------------------------------------------------------------------------------------------------------------*

# **Must Running**

----------------------------------------
"""

pip install pandas matplotlib cartopy pyproj

pip install pandas openpyxl numpy

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import cartopy.crs as ccrs
import pyproj
import numpy as np

"""# **Sorted Coordinates**

----------------------------------------
"""

# Input range koordinat (longitude)
min_longitude, max_longitude = 60, 179.9

# Baca file
excel_file = 'DSS_Coordinates.xlsx'
sheet_name = 'Coordinates'
data = pd.read_excel(excel_file, sheet_name=sheet_name)

# Filter data
filtered_data = data[
    (data['Longitude_360'] >= min_longitude) & (data['Longitude_360'] <= max_longitude)
]

# Urutin data dari longitude
sorted_data = filtered_data.sort_values(by=['Longitude_360'])

# Simpen
print("Jumlah data ter-filter: ", len(filtered_data))
sorted_data.to_excel('sorted_coordinates.xlsx', index=False)

print("muehehehehe")

"""# **Displaying on Martian Maps**

----------------------------------------
"""

# Define Mars parameters
mars_radius = 3396200  # Radius of Mars in meters

# Define a Mars PlateCarree projection using pyproj
mars_crs = pyproj.CRS(proj='eqc', R=mars_radius, lon_0=0)

file_path = 'DSS_Coordinates.xlsx'
sheet_name = 'Coordinates'
data = pd.read_excel(file_path, sheet_name=sheet_name)
#data = pd.read_excel(file_path)

data['Latitude'] = pd.to_numeric(data['Latitude'], errors='coerce')
data['Longitude_360'] = pd.to_numeric(data['Longitude_360'], errors='coerce')
data = data.dropna(subset=['Latitude', 'Longitude_360'])

print("Latitude range: ", data['Latitude'].min(), " to ", data['Latitude'].max())
print("Longitude range: ", data['Longitude_360'].min(), " to ", data['Longitude_360'].max())

# Cartopy
fig = plt.figure(figsize=(15, 30))
ax = plt.axes(projection=ccrs.PlateCarree())

# Gridlines
gl = ax.gridlines(draw_labels=True, crs=ccrs.PlateCarree())
gl.top_labels = False
gl.right_labels = False

# Scatter plot
sns.scatterplot(data=data, x='Longitude_360', y='Latitude', color='red', s=5, ax=ax, transform=ccrs.PlateCarree())

plt.title('Filtered Mars Coordinates')
plt.show()

"""# **Displaying on Martian Maps per-Region**

----------------------------------------

## **Displaying on Martian Maps - Region 1**

**Amazonis Planitia and Tharsis Montes**

----------------------------------------
"""

mars_radius = 3396200 # Radius Mars (m)
mars_crs = pyproj.CRS(proj='eqc', R=mars_radius, lon_0=0)

# Lokasi File
file_path = 'sorted_coordinates_1.xlsx'
data = pd.read_excel(file_path)

# Baca kolom di file
data['Latitude'] = pd.to_numeric(data['Latitude'], errors='coerce')
data['Longitude_360'] = pd.to_numeric(data['Longitude_360'], errors='coerce')

data = data.dropna(subset=['Latitude', 'Longitude_360'])

print("Latitude range: ", data['Latitude'].min(), " to ", data['Latitude'].max())
print("Longitude range: ", data['Longitude_360'].min(), " to ", data['Longitude_360'].max())

# Plot
fig = plt.figure(figsize=(10, 6))
ax = plt.axes(projection=ccrs.PlateCarree())

# Grid Plot
gl = ax.gridlines(draw_labels=True, crs=ccrs.PlateCarree())
gl.top_labels = False
gl.right_labels = False

# Scatter Plot
sns.scatterplot(data=data, x='Longitude_360', y='Latitude', color='red', s=10, ax=ax, transform=ccrs.PlateCarree())

plt.title('DSS di Koordinat Mars 1')
plt.show()

"""## **Displaying on Martian Maps - Region 2**

**Arabia Terra and Syrtis Major**

----------------------------------------
"""

mars_radius = 3396200 # Radius Mars (m)
mars_crs = pyproj.CRS(proj='eqc', R=mars_radius, lon_0=0)

# Lokasi File
file_path = 'sorted_coordinates_2.xlsx'
data = pd.read_excel(file_path)

# Baca kolom di file
data['Latitude'] = pd.to_numeric(data['Latitude'], errors='coerce')
data['Longitude_360'] = pd.to_numeric(data['Longitude_360'], errors='coerce')

data = data.dropna(subset=['Latitude', 'Longitude_360'])

print("Latitude range: ", data['Latitude'].min(), " to ", data['Latitude'].max())
print("Longitude range: ", data['Longitude_360'].min(), " to ", data['Longitude_360'].max())

# Plot
fig = plt.figure(figsize=(10, 6))
ax = plt.axes(projection=ccrs.PlateCarree())

# Grid Plot
gl = ax.gridlines(draw_labels=True, crs=ccrs.PlateCarree())
gl.top_labels = False
gl.right_labels = False

# Scatter Plot
sns.scatterplot(data=data, x='Longitude_360', y='Latitude', color='red', s=10, ax=ax, transform=ccrs.PlateCarree())

plt.title('DSS di Koordinat Mars 1')
plt.show()

"""## **Displaying on Martian Maps - Region 3**

**Elysium Mons**

----------------------------------------
"""

mars_radius = 3396200 # Radius Mars (m)
mars_crs = pyproj.CRS(proj='eqc', R=mars_radius, lon_0=0)

# Lokasi File
file_path = 'sorted_coordinates_3.xlsx'
data = pd.read_excel(file_path)

# Baca kolom di file
data['Latitude'] = pd.to_numeric(data['Latitude'], errors='coerce')
data['Longitude_360'] = pd.to_numeric(data['Longitude_360'], errors='coerce')

data = data.dropna(subset=['Latitude', 'Longitude_360'])

print("Latitude range: ", data['Latitude'].min(), " to ", data['Latitude'].max())
print("Longitude range: ", data['Longitude_360'].min(), " to ", data['Longitude_360'].max())

# Plot
fig = plt.figure(figsize=(10, 6))
ax = plt.axes(projection=ccrs.PlateCarree())

# Grid Plot
gl = ax.gridlines(draw_labels=True, crs=ccrs.PlateCarree())
gl.top_labels = False
gl.right_labels = False

# Scatter Plot
sns.scatterplot(data=data, x='Longitude_360', y='Latitude', color='red', s=10, ax=ax, transform=ccrs.PlateCarree())

plt.title('DSS di Koordinat Mars 1')
plt.show()